{"version":3,"file":"background.bundle.js","mappings":";AAAA;AACAA,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW,CAAC,CAACC,OAAO,EAAEC,MAAM,EAAEC,YAAY,KAAK;EACpE,IAAIF,OAAO,CAACG,IAAI,KAAK,gBAAgB,EAAE;IACnCC,KAAK,CAAC,qCAAqC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAACU,IAAI;IACrC,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACD,IAAI,IAAIR,YAAY,CAAC;MAAEY,OAAO,EAAE,IAAI;MAAEJ;IAAK,CAAC,CAAC,CAAC,CACnDK,KAAK,CAACC,KAAK,IAAId,YAAY,CAAC;MAAEY,OAAO,EAAE,KAAK;MAAEE,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC,CAAC,CAAC;IACvE,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,IAAIjB,OAAO,CAACG,IAAI,KAAK,iBAAiB,EAAE;IACpCe,cAAc,CAAClB,OAAO,CAACmB,OAAO,CAAC,CAC1BR,IAAI,CAACS,UAAU,IAAI;MAChBlB,YAAY,CAAC;QAAEY,OAAO,EAAE,IAAI;QAAEM;MAAW,CAAC,CAAC;IAC/C,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAI;MACZd,YAAY,CAAC;QAAEY,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAEA,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC1D,CAAC,CAAC;IACN,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC,CAAC;;AAEF;AACA,IAAII,YAAY,GAAG,IAAI;AACvB,IAAIC,QAAQ,GAAG,IAAI;AACnB,IAAIC,UAAU,GAAG,IAAI;;AAErB;AACA,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAEhC;AACA,eAAeC,OAAOA,CAAA,EAAG;EACrB,IAAIL,YAAY,EAAE;IACd,MAAMM,aAAa,CAACN,YAAY,CAAC;EACrC;EACAA,YAAY,GAAG,IAAI;EACnBC,QAAQ,GAAG,IAAI;EACfC,UAAU,GAAG,IAAI;AACrB;;AAEA;AACA,SAASK,YAAYA,CAAA,EAAG;EACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,IAAI,CAACnC,MAAM,CAACoC,OAAO,IAAI,CAACpC,MAAM,CAACoC,OAAO,CAACC,KAAK,EAAE;MAC1CF,MAAM,CAAC,IAAIG,KAAK,CAAC,2BAA2B,CAAC,CAAC;MAC9C;IACJ;IACAJ,OAAO,CAAC,CAAC;EACb,CAAC,CAAC;AACN;;AAEA;AACA,eAAeK,SAASA,CAACzB,IAAI,EAAE;EAC3B,IAAI;IACA,MAAMkB,YAAY,CAAC,CAAC;IACpB,OAAO,MAAMhC,MAAM,CAACoC,OAAO,CAACC,KAAK,CAACG,GAAG,CAAC1B,IAAI,CAAC;EAC/C,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA,eAAesB,SAASA,CAACC,IAAI,EAAE;EAC3B,IAAI;IACA,MAAMX,YAAY,CAAC,CAAC;IACpB,OAAO,MAAMhC,MAAM,CAACoC,OAAO,CAACC,KAAK,CAACO,GAAG,CAACD,IAAI,CAAC;EAC/C,CAAC,CAAC,OAAOvB,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA,eAAeyB,YAAYA,CAACC,KAAK,EAAE;EAC/B,IAAI;IACA;IACA,MAAMC,GAAG,GAAG,MAAM/C,MAAM,CAACgD,IAAI,CAACJ,GAAG,CAACE,KAAK,CAAC;;IAExC;IACA,IAAIC,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,WAAW,CAAC,IAC/BH,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,qBAAqB,CAAC,IACzCH,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE;MAChCT,OAAO,CAACU,GAAG,CAAC,6CAA6C,EAAEJ,GAAG,CAACE,GAAG,CAAC;MACnE;IACJ;IAEAR,OAAO,CAACU,GAAG,CAAC,mCAAmC,EAAEL,KAAK,CAAC;;IAEvD;IACA,MAAM9C,MAAM,CAACoD,SAAS,CAACC,SAAS,CAAC;MAC7BC,MAAM,EAAE;QAAER;MAAM,CAAC;MACjBS,GAAG,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,CAAC,CAAC;;IAEF;IACA,MAAMvD,MAAM,CAACoD,SAAS,CAACI,aAAa,CAAC;MACjCF,MAAM,EAAE;QAAER;MAAM,CAAC;MACjBW,IAAI,EAAEA,CAAA,KAAM;QACRhB,OAAO,CAACU,GAAG,CAAC,4BAA4B,CAAC;;QAEzC;QACA,MAAMO,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;QAC3D,IAAIF,QAAQ,EAAEA,QAAQ,CAACG,MAAM,CAAC,CAAC;;QAE/B;QACA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,aAAa,CAAC,KAAK,CAAC;QAC5CD,MAAM,CAACE,EAAE,GAAG,iBAAiB;QAC7BF,MAAM,CAACG,KAAK,CAACC,IAAI,GAAG,KAAK;QACzBJ,MAAM,CAACG,KAAK,CAACE,GAAG,GAAG,KAAK;;QAExB;QACAL,MAAM,CAACG,KAAK,CAACG,OAAO,GAAG,OAAO;QAC9BN,MAAM,CAACG,KAAK,CAACI,UAAU,GAAG,SAAS;QACnCP,MAAM,CAACG,KAAK,CAACK,OAAO,GAAG,GAAG;;QAE1B;QACAX,QAAQ,CAAChD,IAAI,CAAC4D,WAAW,CAACT,MAAM,CAAC;;QAEjC;QACArB,OAAO,CAACU,GAAG,CAAC,iBAAiB,EAAE;UAC3BqB,MAAM,EAAE,CAAC,CAACb,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;UACpDK,KAAK,EAAEQ,MAAM,CAACC,gBAAgB,CAACZ,MAAM;QACzC,CAAC,CAAC;;QAEF;QACA,MAAMa,YAAY,GAAGA,CAAA,KAAM;UACvB,MAAMC,cAAc,GAAGjB,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;UACjE,IAAI,CAACgB,cAAc,EAAE;YACjBjB,QAAQ,CAAChD,IAAI,CAAC4D,WAAW,CAACT,MAAM,CAACe,SAAS,CAAC,IAAI,CAAC,CAAC;UACrD,CAAC,MAAM;YACH;YACAD,cAAc,CAACX,KAAK,CAACG,OAAO,GAAG,OAAO;YACtCQ,cAAc,CAACX,KAAK,CAACI,UAAU,GAAG,SAAS;YAC3CO,cAAc,CAACX,KAAK,CAACK,OAAO,GAAG,GAAG;YAClCM,cAAc,CAACX,KAAK,CAACa,MAAM,GAAG,YAAY;UAC9C;QACJ,CAAC;;QAED;QACAC,WAAW,CAACJ,YAAY,EAAE,GAAG,CAAC;;QAE9B;QACA,MAAMK,QAAQ,GAAG,IAAIC,gBAAgB,CAACN,YAAY,CAAC;QACnDK,QAAQ,CAACE,OAAO,CAACvB,QAAQ,CAAChD,IAAI,EAAE;UAC5BwE,SAAS,EAAE,IAAI;UACfC,OAAO,EAAE;QACb,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEF3C,OAAO,CAACU,GAAG,CAAC,kCAAkC,CAAC;EACnD,CAAC,CAAC,OAAO/B,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ;;AAEA;AACApB,MAAM,CAACgD,IAAI,CAACqC,SAAS,CAAClF,WAAW,CAAC,OAAO2C,KAAK,EAAEwC,UAAU,EAAEvC,GAAG,KAAK;EAChE,IAAIuC,UAAU,CAACC,MAAM,KAAK,UAAU,EAAE;IAClC;IACA,IAAI3D,cAAc,CAAC4D,GAAG,CAAC1C,KAAK,CAAC,EAAE;MAAA,IAAA2C,QAAA,EAAAC,SAAA,EAAAC,SAAA;MAC3BlD,OAAO,CAACU,GAAG,CAAC,yBAAyB,EAAEL,KAAK,CAAC;;MAE7C;MACA,IAAI,CAAA2C,QAAA,GAAA1C,GAAG,CAACE,GAAG,cAAAwC,QAAA,eAAPA,QAAA,CAASvC,UAAU,CAAC,WAAW,CAAC,KAAAwC,SAAA,GAChC3C,GAAG,CAACE,GAAG,cAAAyC,SAAA,eAAPA,SAAA,CAASxC,UAAU,CAAC,qBAAqB,CAAC,KAAAyC,SAAA,GAC1C5C,GAAG,CAACE,GAAG,cAAA0C,SAAA,eAAPA,SAAA,CAASzC,UAAU,CAAC,UAAU,CAAC,EAAE;QACjCT,OAAO,CAACU,GAAG,CAAC,oCAAoC,EAAEJ,GAAG,CAACE,GAAG,CAAC;QAC1DrB,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;QAC5B;MACJ;;MAEA;MACA,IAAI;QACA;QACA,IAAIA,KAAK,KAAKrB,YAAY,EAAE;UACxBgB,OAAO,CAACU,GAAG,CAAC,2CAA2C,EAAEL,KAAK,CAAC;UAC/D,MAAMD,YAAY,CAACC,KAAK,CAAC;QAC7B;;QAEA;QACA,MAAM,IAAIb,OAAO,CAACC,OAAO,IAAI2D,UAAU,CAAC3D,OAAO,EAAE,GAAG,CAAC,CAAC;QACtD,MAAMlC,MAAM,CAACgD,IAAI,CAAC8C,WAAW,CAAChD,KAAK,EAAE;UAAEvC,IAAI,EAAE;QAAmB,CAAC,CAAC;;QAElE;QACA,IAAIoB,UAAU,EAAE;UACZ,IAAI;YACA,MAAMH,UAAU,GAAG,MAAMuE,iBAAiB,CAAC,CAAC;YAC5C,IAAIvE,UAAU,EAAE;cACZG,UAAU,CAACqE,WAAW,CAAC;gBACnBzF,IAAI,EAAE,iBAAiB;gBACvBiB,UAAU,EAAEA;cAChB,CAAC,CAAC;YACN;UACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;YACZqB,OAAO,CAACU,GAAG,CAAC,4BAA4B,EAAE/B,KAAK,CAAC;UACpD;QACJ;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZqB,OAAO,CAACrB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDQ,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;MAChC;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA9C,MAAM,CAACgD,IAAI,CAACiD,SAAS,CAAC9F,WAAW,CAAE2C,KAAK,IAAK;EACzC,IAAIlB,cAAc,CAAC4D,GAAG,CAAC1C,KAAK,CAAC,EAAE;IAC3BL,OAAO,CAACU,GAAG,CAAC,kCAAkC,EAAEL,KAAK,CAAC;IACtDlB,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;EAChC;AACJ,CAAC,CAAC;AAEF9C,MAAM,CAACkG,MAAM,CAACC,SAAS,CAAChG,WAAW,CAAC,MAAO4C,GAAG,IAAK;EAC/C,IAAI;IAAA,IAAAqD,SAAA,EAAAC,UAAA;IACA;IACA,IAAI,EAACtD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEiB,EAAE,GAAE;MACV,MAAM,IAAI1B,KAAK,CAAC,gBAAgB,CAAC;IACrC;;IAEA;IACA,IAAIb,YAAY,IAAIA,YAAY,KAAKsB,GAAG,CAACiB,EAAE,EAAE;MACzC,MAAMjC,aAAa,CAACN,YAAY,CAAC;IACrC;IAEAA,YAAY,GAAGsB,GAAG,CAACiB,EAAE;;IAErB;IACA,IAAItC,QAAQ,EAAE;MACV,IAAI;QACA,MAAM4E,cAAc,GAAG,MAAMtG,MAAM,CAACuG,OAAO,CAAC3D,GAAG,CAAClB,QAAQ,CAACsC,EAAE,CAAC;QAC5D,IAAIsC,cAAc,EAAE;UAChB,MAAMtG,MAAM,CAACuG,OAAO,CAACC,MAAM,CAAC9E,QAAQ,CAACsC,EAAE,EAAE;YAAEyC,OAAO,EAAE;UAAK,CAAC,CAAC;UAC3D,MAAMC,WAAW,CAACjF,YAAY,CAAC;UAC/B;QACJ;MACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZqB,OAAO,CAACrB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CU,OAAO,CAAC,CAAC;MACb;IACJ;;IAEA;IACAJ,QAAQ,GAAG,MAAM1B,MAAM,CAACuG,OAAO,CAACI,MAAM,CAAC;MACnC1D,GAAG,EAAEjD,MAAM,CAACC,OAAO,CAAC2G,MAAM,CAAC,YAAY,CAAC;MACxCrG,IAAI,EAAE,OAAO;MACbsG,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACX3C,GAAG,EAAE,EAAE;MACPD,IAAI,EAAE,EAAE;MACRuC,OAAO,EAAE;IACb,CAAC,CAAC;;IAEF;IACA,IAAI,GAAAL,SAAA,GAAC1E,QAAQ,cAAA0E,SAAA,eAARA,SAAA,CAAUpC,EAAE,GAAE;MACf,MAAM,IAAI1B,KAAK,CAAC,+BAA+B,CAAC;IACpD;;IAEA;IACA,IAAI,CAAA+D,UAAA,GAAA3E,QAAQ,cAAA2E,UAAA,eAARA,UAAA,CAAUrC,EAAE,IAAIvC,YAAY,EAAE;MAC9B,MAAMc,SAAS,CAAC;QACZwE,UAAU,EAAErF,QAAQ,CAACsC,EAAE;QACvBvC,YAAY,EAAEA;MAClB,CAAC,CAAC;MACF,MAAMiF,WAAW,CAACjF,YAAY,CAAC;IACnC;EAEJ,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDU,OAAO,CAAC,CAAC;EACb;AACJ,CAAC,CAAC;;AAEF;AACA9B,MAAM,CAACuG,OAAO,CAACN,SAAS,CAAC9F,WAAW,CAAC,MAAO6G,QAAQ,IAAK;EACrD,IAAItF,QAAQ,IAAIsF,QAAQ,KAAKtF,QAAQ,CAACsC,EAAE,EAAE;IACtC,MAAMlC,OAAO,CAAC,CAAC;EACnB;AACJ,CAAC,CAAC;;AAEF;AACA9B,MAAM,CAACC,OAAO,CAACgH,SAAS,CAAC9G,WAAW,CAAC,UAAS+G,IAAI,EAAE;EAChD,IAAIA,IAAI,CAACC,IAAI,KAAK,WAAW,EAAE;IAC3BxF,UAAU,GAAGuF,IAAI;;IAEjB;IACAxE,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC3B,IAAI,CAACqG,MAAM,IAAI;MACvC3F,YAAY,GAAG2F,MAAM,CAAC3F,YAAY;MAClCyF,IAAI,CAAClB,WAAW,CAAC;QACbzF,IAAI,EAAE,YAAY;QAClBkB,YAAY,EAAEA;MAClB,CAAC,CAAC;IACN,CAAC,CAAC,CAACN,KAAK,CAACC,KAAK,IAAI;MACdqB,OAAO,CAACrB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C8F,IAAI,CAAClB,WAAW,CAAC;QACbzF,IAAI,EAAE,YAAY;QAClBa,KAAK,EAAEA,KAAK,CAACC;MACjB,CAAC,CAAC;IACN,CAAC,CAAC;;IAEF;IACA6F,IAAI,CAACG,YAAY,CAAClH,WAAW,CAAC,MAAM;MAChCwB,UAAU,GAAG,IAAI;IACrB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACA,eAAeoE,iBAAiBA,CAAA,EAAG;EAC/B,IAAI,CAACtE,YAAY,EAAE,OAAO,IAAI;EAC9B,IAAI;IACA,MAAMD,UAAU,GAAG,MAAMxB,MAAM,CAACgD,IAAI,CAACsE,iBAAiB,CAAC,IAAI,EAAE;MACzDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;IACb,CAAC,CAAC;IACF,OAAOhG,UAAU;EACrB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,IAAI;EACf;AACJ;;AAEA;AACA,eAAeE,cAAcA,CAACC,OAAO,EAAE;EACnC,IAAI;IACA;IACA,IAAIA,OAAO,CAAChB,IAAI,KAAK,eAAe,EAAE;MAClC,IAAIkB,YAAY,EAAE;QACd,MAAMoB,YAAY,CAACpB,YAAY,CAAC;QAChC,OAAO,IAAI,CAAC,CAAC;MACjB;MACA,OAAO,IAAI;IACf;;IAEA;IACA,MAAM,IAAIQ,OAAO,CAACC,OAAO,IAAI;MACzB,MAAMuF,aAAa,GAAGA,CAAC3E,KAAK,EAAEwC,UAAU,KAAK;QACzC,IAAIxC,KAAK,KAAKrB,YAAY,IAAI6D,UAAU,CAACC,MAAM,KAAK,UAAU,EAAE;UAC5DvF,MAAM,CAACgD,IAAI,CAACqC,SAAS,CAACqC,cAAc,CAACD,aAAa,CAAC;UACnDvF,OAAO,CAAC,CAAC;QACb;MACJ,CAAC;MACDlC,MAAM,CAACgD,IAAI,CAACqC,SAAS,CAAClF,WAAW,CAACsH,aAAa,CAAC;;MAEhD;MACA5B,UAAU,CAAC,MAAM;QACb7F,MAAM,CAACgD,IAAI,CAACqC,SAAS,CAACqC,cAAc,CAACD,aAAa,CAAC;QACnDvF,OAAO,CAAC,CAAC;MACb,CAAC,EAAE,KAAK,CAAC;IACb,CAAC,CAAC;;IAEF;IACA,MAAMV,UAAU,GAAG,MAAMuE,iBAAiB,CAAC,CAAC;;IAE5C;IACA,IAAIpE,UAAU,IAAIH,UAAU,EAAE;MAC1BG,UAAU,CAACqE,WAAW,CAAC;QACnBzF,IAAI,EAAE,gBAAgB;QACtBiB,UAAU,EAAEA;MAChB,CAAC,CAAC;IACN;IAEA,OAAOA,UAAU;EACrB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ;;AAEA;AACA,MAAMuG,aAAa,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,aAAa,GAAG,4BAA4B;IACjD,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,cAAc,CAAC,CAAC;EACzB;EAEAD,oBAAoBA,CAAA,EAAG;IACnB,MAAME,eAAe,GAAG;MACpB/E,GAAG,EAAEV,OAAO,CAACU,GAAG;MAChB/B,KAAK,EAAEqB,OAAO,CAACrB,KAAK;MACpB+G,IAAI,EAAE1F,OAAO,CAAC0F,IAAI;MAClBC,IAAI,EAAE3F,OAAO,CAAC2F;IAClB,CAAC;;IAED;IACA,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAACC,OAAO,CAAC5H,MAAM,IAAI;MAC/CgC,OAAO,CAAChC,MAAM,CAAC,GAAG,CAAC,GAAG6H,IAAI,KAAK;QAC3B;QACAJ,eAAe,CAACzH,MAAM,CAAC,CAAC8H,KAAK,CAAC9F,OAAO,EAAE6F,IAAI,CAAC;QAC5C;QACA,IAAI,CAACR,MAAM,CAACU,IAAI,CAAC;UACbjI,IAAI,EAAEE,MAAM;UACZgI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACnCtH,OAAO,EAAEiH,IAAI,CAACM,GAAG,CAACC,GAAG,IAAI;YACrB,IAAI;cACA,OAAO,OAAOA,GAAG,KAAK,QAAQ,GAAGjI,IAAI,CAACC,SAAS,CAACgI,GAAG,CAAC,GAAGC,MAAM,CAACD,GAAG,CAAC;YACtE,CAAC,CAAC,OAAOE,CAAC,EAAE;cACR,OAAOD,MAAM,CAACD,GAAG,CAAC;YACtB;UACJ,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;UACZlG,KAAK,EAAErB;QACX,CAAC,CAAC;QACF,IAAI,CAACwH,WAAW,CAAC,CAAC;MACtB,CAAC;IACL,CAAC,CAAC;EACN;EAEA,MAAMA,WAAWA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACnB,MAAM,CAACoB,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAACnB,WAAW,EAAE;IAEnD,IAAI;MACA,MAAMvH,KAAK,CAAC,IAAI,CAACqH,aAAa,EAAE;QAC5BpH,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBsI,IAAI,EAAE,IAAI,CAACrB;QACf,CAAC;MACL,CAAC,CAAC;MACF,IAAI,CAACA,MAAM,GAAG,EAAE;IACpB,CAAC,CAAC,OAAO1G,KAAK,EAAE;MACZ,IAAI,CAAC2G,WAAW,GAAG,KAAK;IAC5B;EACJ;EAEA,MAAME,cAAcA,CAAA,EAAG;IACnB,IAAI;MACA,MAAMjH,QAAQ,GAAG,MAAMR,KAAK,CAAC,IAAI,CAACqH,aAAa,GAAG,YAAY,CAAC;MAC/D,IAAI,CAACE,WAAW,GAAG/G,QAAQ,CAACoI,EAAE;IAClC,CAAC,CAAC,OAAOhI,KAAK,EAAE;MACZ,IAAI,CAAC2G,WAAW,GAAG,KAAK;IAC5B;;IAEA;IACAlC,UAAU,CAAC,MAAM,IAAI,CAACoC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EACjD;AACJ;;AAEA;AACA,MAAMoB,MAAM,GAAG,IAAI1B,aAAa,CAAC,CAAC;AAElC,eAAejB,WAAWA,CAAC5D,KAAK,EAAE;EAC9B,IAAI;IAAA,IAAAwG,SAAA,EAAAC,SAAA,EAAAC,SAAA;IACA;IACA,IAAI5H,cAAc,CAAC4D,GAAG,CAAC1C,KAAK,CAAC,EAAE;MAC3BL,OAAO,CAACU,GAAG,CAAC,yBAAyB,EAAEL,KAAK,CAAC;MAC7C;IACJ;;IAEA;IACA,MAAMC,GAAG,GAAG,MAAM/C,MAAM,CAACgD,IAAI,CAACJ,GAAG,CAACE,KAAK,CAAC;;IAExC;IACA,IAAI,CAAAwG,SAAA,GAAAvG,GAAG,CAACE,GAAG,cAAAqG,SAAA,eAAPA,SAAA,CAASpG,UAAU,CAAC,WAAW,CAAC,KAAAqG,SAAA,GAChCxG,GAAG,CAACE,GAAG,cAAAsG,SAAA,eAAPA,SAAA,CAASrG,UAAU,CAAC,qBAAqB,CAAC,KAAAsG,SAAA,GAC1CzG,GAAG,CAACE,GAAG,cAAAuG,SAAA,eAAPA,SAAA,CAAStG,UAAU,CAAC,UAAU,CAAC,EAAE;MACjCT,OAAO,CAACU,GAAG,CAAC,oCAAoC,EAAEJ,GAAG,CAACE,GAAG,CAAC;MAC1D;IACJ;IAEAR,OAAO,CAACU,GAAG,CAAC,6BAA6B,EAAEL,KAAK,CAAC;;IAEjD;IACA,IAAIA,KAAK,KAAKrB,YAAY,EAAE;MACxBgB,OAAO,CAACU,GAAG,CAAC,yCAAyC,EAAEL,KAAK,CAAC;MAC7D,MAAMD,YAAY,CAACC,KAAK,CAAC;IAC7B;;IAEA;IACAlB,cAAc,CAAC6H,GAAG,CAAC3G,KAAK,CAAC;IACzB,IAAI;MACA,MAAM9C,MAAM,CAACgD,IAAI,CAAC8C,WAAW,CAAChD,KAAK,EAAE;QAAEvC,IAAI,EAAE;MAAmB,CAAC,CAAC;MAClEkC,OAAO,CAACU,GAAG,CAAC,wBAAwB,EAAEL,KAAK,CAAC;IAChD,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACZqB,OAAO,CAACrB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CQ,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;MAC5B,MAAM1B,KAAK;IACf;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvDQ,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;IAC5B,MAAM1B,KAAK;EACf;AACJ;AAEA,eAAeW,aAAaA,CAACe,KAAK,EAAE;EAChC,IAAI,CAAClB,cAAc,CAAC4D,GAAG,CAAC1C,KAAK,CAAC,EAAE;IAC5BL,OAAO,CAACU,GAAG,CAAC,qBAAqB,EAAEL,KAAK,CAAC;IACzC;EACJ;EAEAL,OAAO,CAACU,GAAG,CAAC,+BAA+B,EAAEL,KAAK,CAAC;EAEnD,IAAI;IACA;IACA,IAAIA,KAAK,KAAKrB,YAAY,EAAE;MACxBgB,OAAO,CAACU,GAAG,CAAC,mCAAmC,EAAEL,KAAK,CAAC;MACvD,MAAM9C,MAAM,CAACoD,SAAS,CAACI,aAAa,CAAC;QACjCF,MAAM,EAAE;UAAER;QAAM,CAAC;QACjBW,IAAI,EAAEA,CAAA,KAAM;UACR,MAAMK,MAAM,GAAGH,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;UACzD,IAAIE,MAAM,EAAEA,MAAM,CAACD,MAAM,CAAC,CAAC;UAC3B,MAAM6F,MAAM,GAAG/F,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;UAC1D,IAAI8F,MAAM,EAAEA,MAAM,CAAC7F,MAAM,CAAC,CAAC;QAC/B;MACJ,CAAC,CAAC;IACN;IAEA,MAAM7D,MAAM,CAACgD,IAAI,CAAC8C,WAAW,CAAChD,KAAK,EAAE;MAAEvC,IAAI,EAAE;IAAqB,CAAC,CAAC;IACpEkC,OAAO,CAACU,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAAC;EAClD,CAAC,CAAC,OAAO1B,KAAK,EAAE;IACZqB,OAAO,CAACrB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD,CAAC,SAAS;IACN;IACAQ,cAAc,CAACgE,MAAM,CAAC9C,KAAK,CAAC;EAChC;AACJ,C","sources":["webpack://qa-testing-assistant/./background.js"],"sourcesContent":["// Handle messages\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.type === 'OLLAMA_REQUEST') {\n        fetch('http://localhost:11434/api/generate', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(request.data)\n        })\n        .then(response => response.json())\n        .then(data => sendResponse({ success: true, data }))\n        .catch(error => sendResponse({ success: false, error: error.message }));\n        return true; // Keep the message channel open for async response\n    }\n    \n    if (request.type === 'EXECUTE_COMMAND') {\n        executeCommand(request.command)\n            .then(screenshot => {\n                sendResponse({ success: true, screenshot });\n            })\n            .catch(error => {\n                sendResponse({ success: false, error: error.message });\n            });\n        return true; // Keep the message channel open for async response\n    }\n});\n\n// State tracking\nlet browserTabId = null;\nlet qaWindow = null;\nlet activePort = null;\n\n// Track controlled tabs\nconst controlledTabs = new Set();\n\n// Clean up function for when window is closed\nasync function cleanup() {\n    if (browserTabId) {\n        await deactivateTab(browserTabId);\n    }\n    browserTabId = null;\n    qaWindow = null;\n    activePort = null;\n}\n\n// Ensure storage is available\nfunction checkStorage() {\n    return new Promise((resolve, reject) => {\n        if (!chrome.storage || !chrome.storage.local) {\n            reject(new Error('Storage API not available'));\n            return;\n        }\n        resolve();\n    });\n}\n\n// Save state to storage\nasync function saveState(data) {\n    try {\n        await checkStorage();\n        return await chrome.storage.local.set(data);\n    } catch (error) {\n        console.error('Failed to save state:', error);\n        throw error;\n    }\n}\n\n// Load state from storage\nasync function loadState(keys) {\n    try {\n        await checkStorage();\n        return await chrome.storage.local.get(keys);\n    } catch (error) {\n        console.error('Failed to load state:', error);\n        throw error;\n    }\n}\n\n// Function to inject cursor script\nasync function injectCursor(tabId) {\n    try {\n        // First check if we can inject into this tab\n        const tab = await chrome.tabs.get(tabId);\n        \n        // Skip chrome:// and other internal URLs\n        if (tab.url.startsWith('chrome://') || \n            tab.url.startsWith('chrome-extension://') || \n            tab.url.startsWith('brave://')) {\n            console.log('Skipping cursor injection for internal URL:', tab.url);\n            return;\n        }\n\n        console.log('Injecting cursor script into tab:', tabId);\n        \n        // First inject the cursor CSS\n        await chrome.scripting.insertCSS({\n            target: { tabId },\n            css: `\n                #qa-mouse-cursor {\n                    position: fixed !important;\n                    width: 50px !important;\n                    height: 50px !important;\n                    background-color: red !important;\n                    border: 3px solid black !important;\n                    border-radius: 50% !important;\n                    pointer-events: none !important;\n                    z-index: 2147483647 !important;\n                    transform: translate(-50%, -50%) !important;\n                    transition: all 0.3s ease !important;\n                    display: block !important;\n                    visibility: visible !important;\n                    opacity: 1 !important;\n                }\n            `\n        });\n\n        // Then inject the cursor creation script\n        await chrome.scripting.executeScript({\n            target: { tabId },\n            func: () => {\n                console.log('Creating cursor element...');\n                \n                // Remove existing cursor if any\n                const existing = document.getElementById('qa-mouse-cursor');\n                if (existing) existing.remove();\n                \n                // Create new cursor\n                const cursor = document.createElement('div');\n                cursor.id = 'qa-mouse-cursor';\n                cursor.style.left = '50%';\n                cursor.style.top = '50%';\n                \n                // Make sure cursor is visible\n                cursor.style.display = 'block';\n                cursor.style.visibility = 'visible';\n                cursor.style.opacity = '1';\n                \n                // Add cursor to page\n                document.body.appendChild(cursor);\n                \n                // Log creation\n                console.log('Cursor created:', {\n                    exists: !!document.getElementById('qa-mouse-cursor'),\n                    style: window.getComputedStyle(cursor)\n                });\n\n                // Keep cursor visible and in front\n                const ensureCursor = () => {\n                    const existingCursor = document.getElementById('qa-mouse-cursor');\n                    if (!existingCursor) {\n                        document.body.appendChild(cursor.cloneNode(true));\n                    } else {\n                        // Make sure cursor is visible and in front\n                        existingCursor.style.display = 'block';\n                        existingCursor.style.visibility = 'visible';\n                        existingCursor.style.opacity = '1';\n                        existingCursor.style.zIndex = '2147483647';\n                    }\n                };\n\n                // Check cursor every 500ms\n                setInterval(ensureCursor, 500);\n                \n                // Also ensure cursor after any dynamic content changes\n                const observer = new MutationObserver(ensureCursor);\n                observer.observe(document.body, {\n                    childList: true,\n                    subtree: true\n                });\n            }\n        });\n\n        console.log('Cursor script injection complete');\n    } catch (error) {\n        console.error('Failed to inject cursor:', error);\n        throw error;\n    }\n}\n\n// Handle tab updates\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n    if (changeInfo.status === 'complete') {\n        // If this is a controlled tab\n        if (controlledTabs.has(tabId)) {\n            console.log('Controlled tab updated:', tabId);\n            \n            // Skip for internal URLs\n            if (tab.url?.startsWith('chrome://') || \n                tab.url?.startsWith('chrome-extension://') || \n                tab.url?.startsWith('brave://')) {\n                console.log('Removing control for internal URL:', tab.url);\n                controlledTabs.delete(tabId);\n                return;\n            }\n            \n            // Reactivate control\n            try {\n                // Only inject cursor if this is the active browser tab\n                if (tabId === browserTabId) {\n                    console.log('Reinjecting cursor in active browser tab:', tabId);\n                    await injectCursor(tabId);\n                }\n                \n                // Wait a bit before sending activation message\n                await new Promise(resolve => setTimeout(resolve, 500));\n                await chrome.tabs.sendMessage(tabId, { type: 'ACTIVATE_CONTROL' });\n                \n                // Capture screenshot if port is active\n                if (activePort) {\n                    try {\n                        const screenshot = await captureScreenshot();\n                        if (screenshot) {\n                            activePort.postMessage({\n                                type: 'PAGE_SCREENSHOT',\n                                screenshot: screenshot\n                            });\n                        }\n                    } catch (error) {\n                        console.log('Screenshot capture failed:', error);\n                    }\n                }\n            } catch (error) {\n                console.error('Failed to reactivate tab control:', error);\n                controlledTabs.delete(tabId);\n            }\n        }\n    }\n});\n\n// Handle tab removal\nchrome.tabs.onRemoved.addListener((tabId) => {\n    if (controlledTabs.has(tabId)) {\n        console.log('Removing control for closed tab:', tabId);\n        controlledTabs.delete(tabId);\n    }\n});\n\nchrome.action.onClicked.addListener(async (tab) => {\n    try {\n        // Validate and store the current tab ID\n        if (!tab?.id) {\n            throw new Error('Invalid tab ID');\n        }\n        \n        // Deactivate previous tab if exists\n        if (browserTabId && browserTabId !== tab.id) {\n            await deactivateTab(browserTabId);\n        }\n        \n        browserTabId = tab.id;\n        \n        // If window exists, focus it instead of creating new one\n        if (qaWindow) {\n            try {\n                const existingWindow = await chrome.windows.get(qaWindow.id);\n                if (existingWindow) {\n                    await chrome.windows.update(qaWindow.id, { focused: true });\n                    await activateTab(browserTabId);\n                    return;\n                }\n            } catch (error) {\n                console.error('Failed to focus window:', error);\n                cleanup();\n            }\n        }\n        \n        // Create window with better dimensions\n        qaWindow = await chrome.windows.create({\n            url: chrome.runtime.getURL('popup.html'),\n            type: 'popup',\n            width: 500,\n            height: 700,\n            top: 20,\n            left: 20,\n            focused: true\n        });\n\n        // Verify window was created properly\n        if (!qaWindow?.id) {\n            throw new Error('Failed to create popup window');\n        }\n\n        // Store window info and activate tab control\n        if (qaWindow?.id && browserTabId) {\n            await saveState({ \n                qaWindowId: qaWindow.id,\n                browserTabId: browserTabId\n            });\n            await activateTab(browserTabId);\n        }\n\n    } catch (error) {\n        console.error('Failed to create window:', error);\n        cleanup();\n    }\n});\n\n// Handle window removal\nchrome.windows.onRemoved.addListener(async (windowId) => {\n    if (qaWindow && windowId === qaWindow.id) {\n        await cleanup();\n    }\n});\n\n// Handle connections from popup\nchrome.runtime.onConnect.addListener(function(port) {\n    if (port.name === \"qa-window\") {\n        activePort = port;\n        \n        // Send initial state\n        loadState(['browserTabId']).then(result => {\n            browserTabId = result.browserTabId;\n            port.postMessage({\n                type: 'INIT_STATE',\n                browserTabId: browserTabId\n            });\n        }).catch(error => {\n            console.error('Failed to load state:', error);\n            port.postMessage({\n                type: 'INIT_STATE',\n                error: error.message\n            });\n        });\n\n        // Handle port disconnection\n        port.onDisconnect.addListener(() => {\n            activePort = null;\n        });\n    }\n});\n\n// Capture screenshot after page load\nasync function captureScreenshot() {\n    if (!browserTabId) return null;\n    try {\n        const screenshot = await chrome.tabs.captureVisibleTab(null, {\n            format: 'png',\n            quality: 100\n        });\n        return screenshot;\n    } catch (error) {\n        console.error('Screenshot capture failed:', error);\n        return null;\n    }\n}\n\n// Handle command execution and screenshot capture\nasync function executeCommand(command) {\n    try {\n        // Special handling for ensure_cursor command\n        if (command.type === 'ensure_cursor') {\n            if (browserTabId) {\n                await injectCursor(browserTabId);\n                return null; // No screenshot needed\n            }\n            return null;\n        }\n\n        // Wait for any page load to complete\n        await new Promise(resolve => {\n            const checkComplete = (tabId, changeInfo) => {\n                if (tabId === browserTabId && changeInfo.status === 'complete') {\n                    chrome.tabs.onUpdated.removeListener(checkComplete);\n                    resolve();\n                }\n            };\n            chrome.tabs.onUpdated.addListener(checkComplete);\n            \n            // Timeout after 10 seconds\n            setTimeout(() => {\n                chrome.tabs.onUpdated.removeListener(checkComplete);\n                resolve();\n            }, 10000);\n        });\n\n        // Capture screenshot after command execution\n        const screenshot = await captureScreenshot();\n        \n        // Send screenshot back to UI\n        if (activePort && screenshot) {\n            activePort.postMessage({\n                type: 'COMMAND_RESULT',\n                screenshot: screenshot\n            });\n        }\n\n        return screenshot;\n    } catch (error) {\n        console.error('Command execution failed:', error);\n        throw error;\n    }\n}\n\n// Logging system\nclass LoggingSystem {\n    constructor() {\n        this.debugEndpoint = 'http://localhost:3456/logs';\n        this.buffer = [];\n        this.isConnected = false;\n        this.setupConsoleOverride();\n        this.startHeartbeat();\n    }\n\n    setupConsoleOverride() {\n        const originalConsole = {\n            log: console.log,\n            error: console.error,\n            warn: console.warn,\n            info: console.info\n        };\n\n        // Override console methods\n        ['log', 'error', 'warn', 'info'].forEach(method => {\n            console[method] = (...args) => {\n                // Call original console method\n                originalConsole[method].apply(console, args);\n                // Add to our buffer\n                this.buffer.push({\n                    type: method,\n                    timestamp: new Date().toISOString(),\n                    message: args.map(arg => {\n                        try {\n                            return typeof arg === 'object' ? JSON.stringify(arg) : String(arg);\n                        } catch (e) {\n                            return String(arg);\n                        }\n                    }).join(' '),\n                    tabId: browserTabId\n                });\n                this.flushBuffer();\n            };\n        });\n    }\n\n    async flushBuffer() {\n        if (this.buffer.length === 0 || !this.isConnected) return;\n\n        try {\n            await fetch(this.debugEndpoint, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    logs: this.buffer\n                })\n            });\n            this.buffer = [];\n        } catch (error) {\n            this.isConnected = false;\n        }\n    }\n\n    async startHeartbeat() {\n        try {\n            const response = await fetch(this.debugEndpoint + '/heartbeat');\n            this.isConnected = response.ok;\n        } catch (error) {\n            this.isConnected = false;\n        }\n        \n        // Check connection every 5 seconds\n        setTimeout(() => this.startHeartbeat(), 5000);\n    }\n}\n\n// Initialize logging system\nconst logger = new LoggingSystem();\n\nasync function activateTab(tabId) {\n    try {\n        // Skip if already controlled\n        if (controlledTabs.has(tabId)) {\n            console.log('Tab already controlled:', tabId);\n            return;\n        }\n\n        // Get tab info\n        const tab = await chrome.tabs.get(tabId);\n        \n        // Skip internal URLs\n        if (tab.url?.startsWith('chrome://') || \n            tab.url?.startsWith('chrome-extension://') || \n            tab.url?.startsWith('brave://')) {\n            console.log('Skipping control for internal URL:', tab.url);\n            return;\n        }\n\n        console.log('Activating control for tab:', tabId);\n        \n        // Only inject cursor if this is the active browser tab\n        if (tabId === browserTabId) {\n            console.log('Injecting cursor in active browser tab:', tabId);\n            await injectCursor(tabId);\n        }\n\n        // Add to controlled set and send activation message\n        controlledTabs.add(tabId);\n        try {\n            await chrome.tabs.sendMessage(tabId, { type: 'ACTIVATE_CONTROL' });\n            console.log('Tab control activated:', tabId);\n        } catch (error) {\n            console.error('Failed to activate tab:', error);\n            controlledTabs.delete(tabId);\n            throw error;\n        }\n    } catch (error) {\n        console.error('Failed to activate tab control:', error);\n        controlledTabs.delete(tabId);\n        throw error;\n    }\n}\n\nasync function deactivateTab(tabId) {\n    if (!controlledTabs.has(tabId)) {\n        console.log('Tab not controlled:', tabId);\n        return;\n    }\n\n    console.log('Deactivating control for tab:', tabId);\n    \n    try {\n        // Remove cursor if this was the active browser tab\n        if (tabId === browserTabId) {\n            console.log('Removing cursor from browser tab:', tabId);\n            await chrome.scripting.executeScript({\n                target: { tabId },\n                func: () => {\n                    const cursor = document.getElementById('qa-mouse-cursor');\n                    if (cursor) cursor.remove();\n                    const styles = document.getElementById('qa-cursor-styles');\n                    if (styles) styles.remove();\n                }\n            });\n        }\n\n        await chrome.tabs.sendMessage(tabId, { type: 'DEACTIVATE_CONTROL' });\n        console.log('Tab control deactivated:', tabId);\n    } catch (error) {\n        console.error('Failed to deactivate tab:', error);\n    } finally {\n        // Always remove from controlled set\n        controlledTabs.delete(tabId);\n    }\n}\n"],"names":["chrome","runtime","onMessage","addListener","request","sender","sendResponse","type","fetch","method","headers","body","JSON","stringify","data","then","response","json","success","catch","error","message","executeCommand","command","screenshot","browserTabId","qaWindow","activePort","controlledTabs","Set","cleanup","deactivateTab","checkStorage","Promise","resolve","reject","storage","local","Error","saveState","set","console","loadState","keys","get","injectCursor","tabId","tab","tabs","url","startsWith","log","scripting","insertCSS","target","css","executeScript","func","existing","document","getElementById","remove","cursor","createElement","id","style","left","top","display","visibility","opacity","appendChild","exists","window","getComputedStyle","ensureCursor","existingCursor","cloneNode","zIndex","setInterval","observer","MutationObserver","observe","childList","subtree","onUpdated","changeInfo","status","has","_tab$url","_tab$url2","_tab$url3","delete","setTimeout","sendMessage","captureScreenshot","postMessage","onRemoved","action","onClicked","_qaWindow","_qaWindow2","existingWindow","windows","update","focused","activateTab","create","getURL","width","height","qaWindowId","windowId","onConnect","port","name","result","onDisconnect","captureVisibleTab","format","quality","checkComplete","removeListener","LoggingSystem","constructor","debugEndpoint","buffer","isConnected","setupConsoleOverride","startHeartbeat","originalConsole","warn","info","forEach","args","apply","push","timestamp","Date","toISOString","map","arg","String","e","join","flushBuffer","length","logs","ok","logger","_tab$url4","_tab$url5","_tab$url6","add","styles"],"sourceRoot":""}