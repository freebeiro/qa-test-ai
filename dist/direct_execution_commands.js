import{UrlHelper}from"./url_helper.js";export async function executeCommand(e,t){console.log(`Executing command directly: ${e.type}`,e);const r=await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100});try{switch(e.type){case"click":return await executeClick(e.text,t,r);case"navigation":if(["back","forward","refresh","reload"].includes(e.url.toLowerCase()))switch(e.url.toLowerCase()){case"back":return await executeBack(t,r);case"forward":return await executeForward(t,r);case"refresh":case"reload":return await executeRefresh(t,r)}return await executeNavigation(e.url,t,r);case"back":return await executeBack(t,r);case"forward":return await executeForward(t,r);case"refresh":return await executeRefresh(t,r);case"search":return await executeSearch(e.text,t,r);case"ensure_cursor":return await executeCursorInjection(t);default:throw new Error(`Unsupported command type: ${e.type}`)}}catch(e){throw console.error(`Command execution failed: ${e.message}`),e}}async function executeClick(e,t,r){await chrome.scripting.executeScript({target:{tabId:t},files:["super_click.js"]});const a=(await chrome.scripting.executeScript({target:{tabId:t},func:e=>{const t=document.querySelector("script")._superClick;return t?t.superClick(e):{success:!1,error:"Super click not available"}},args:[e]}))[0].result;if(!a||!a.success)throw new Error(a?.error||`Failed to click element with text: ${e}`);return await new Promise((e=>setTimeout(e,1e3))),{success:!0,message:`Clicked element with text: ${e}`,beforeScreenshot:r,afterScreenshot:await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100})}}async function executeBack(e,t){return console.log("Executing back command"),await chrome.tabs.goBack(e),await waitForTabLoad(e),{success:!0,message:"Navigated back in history",beforeScreenshot:t,afterScreenshot:await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100})}}async function executeForward(e,t){return console.log("Executing forward command"),await chrome.tabs.goForward(e),await waitForTabLoad(e),{success:!0,message:"Navigated forward in history",beforeScreenshot:t,afterScreenshot:await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100})}}async function executeRefresh(e,t){return console.log("Executing refresh command"),await chrome.tabs.reload(e),await waitForTabLoad(e),{success:!0,message:"Page refreshed",beforeScreenshot:t,afterScreenshot:await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100})}}async function executeNavigation(e,t,r){console.log(`Executing navigation to: ${e}`);let a=e;return e.startsWith("http://")||e.startsWith("https://")||(a="https://"+e),await chrome.tabs.update(t,{url:a}),await waitForTabLoad(t),{success:!0,message:`Navigated to ${a}`,beforeScreenshot:r,afterScreenshot:await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100})}}async function executeSearch(e,t,r){console.log(`Executing search for: ${e}`);const a=await chrome.scripting.executeScript({target:{tabId:t},func:e=>{const t=function(e){if(window.find)return window.find(e,!1,!1,!0,!1,!0,!1);const t=[],r=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,!1);let a;for(;a=r.nextNode();)a.nodeValue.toLowerCase().includes(e.toLowerCase())&&t.push(a);if(t.length>0){const e=document.createRange();e.selectNode(t[0]);const r=window.getSelection();return r.removeAllRanges(),r.addRange(e),t[0].parentElement.scrollIntoView({behavior:"smooth",block:"center"}),!0}return!1}(e);return{success:t,message:t?`Found text: ${e}`:`Text not found: ${e}`}},args:[e]}),o=a[0].result,c=await chrome.tabs.captureVisibleTab(null,{format:"png",quality:100});return{success:o.success,message:o.message,beforeScreenshot:r,afterScreenshot:c}}async function executeCursorInjection(e){return console.log("Injecting cursor"),await chrome.scripting.insertCSS({target:{tabId:e},css:"\n            #qa-mouse-cursor {\n                position: fixed !important;\n                width: 32px !important;\n                height: 32px !important;\n                background-color: red !important;\n                border: 2px solid white !important;\n                border-radius: 50% !important;\n                pointer-events: none !important;\n                z-index: 2147483647 !important;\n                transform: translate(-50%, -50%) !important;\n                transition: all 0.3s ease !important;\n                top: 50% !important;\n                left: 50% !important;\n            }\n        "}),await chrome.scripting.executeScript({target:{tabId:e},func:()=>{const e=document.getElementById("qa-mouse-cursor");e&&e.remove();const t=document.createElement("div");return t.id="qa-mouse-cursor",document.body.appendChild(t),{success:!0}}}),{success:!0,message:"Cursor injected successfully"}}function waitForTabLoad(e){return new Promise((t=>{function r(a,o){a===e&&"complete"===o.status&&(chrome.tabs.onUpdated.removeListener(r),setTimeout(t,500))}chrome.tabs.onUpdated.addListener(r),setTimeout((()=>{chrome.tabs.onUpdated.removeListener(r),t()}),1e4)}))}